{
  "name": "jQuery",
  "order": 3,
  "time": "3 hours",
  "helpRoom": "Help",
  "required": [
    {
      "link": "https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.css"
    }
  ],
  "challenges": [
    {
      "id": "bad87fee1348bd9acdd08826",
      "title": "Learn How Script Tags and Document Ready Work",
      "description": [
        "现在我们已经准备好学习有史以来最受欢迎的 JavaScript 框架——jQuery 了。",
        "在使用 jQuery 之前，我们需要在 HTML 页面中添加一些东西。",
        "首先，在页面顶部添加<code>script</code>标签，记得在后面为<code>script</code>标签添加结束标签。",
        "浏览器在<code>script</code>标签中运行所有的 JavaScript 脚本包括 jQuery。",
        "在<code>script</code>标签中添加代码<code>$(document).ready(function() {</code>。然后在后面（仍在该<code>script</code>标签内）用<code>});</code>闭合它。",
        "稍后我们将详细介绍<code>functions</code>，现在需要知道的是，只要浏览器加载页面，<code>function</code>中放入的代码就会运行。",
        "有一点很重要，如果没有<code>document ready function</code>，你的代码将在 HTML 页面呈现之前运行，这将导致错误。"
      ],
      "tests": [
        {
          "text": "创建一个<code>script</code>标签，确保其有效并具有闭合标签。",
          "testString": "assert(code.match(/<\\/script\\s*>/g) && code.match(/<script(\\sasync|\\sdefer)*(\\s(charset|src|type)\\s*=\\s*[\"\\']+[^\"\\']*[\"\\']+)*(\\sasync|\\sdefer)*\\s*>/g) && code.match(/<\\/script\\s*>/g).length === code.match(/<script(\\sasync|\\sdefer)*(\\s(charset|src|type)\\s*=\\s*[\"\\']+[^\"\\']*[\"\\']+)*(\\sasync|\\sdefer)*\\s*>/g).length, '创建一个<code>script</code>标签，确保其有效并具有闭合标签。');"
        },
        {
          "text": "在<code>script</code>的开头添加<code>$&#40;document&#41;.ready<wbr>&#40;function&#40;&#41; {</code>。",
          "testString": "assert(code.match(/\\$\\s*?\\(\\s*?document\\s*?\\)\\.ready\\s*?\\(\\s*?function\\s*?\\(\\s*?\\)\\s*?\\{/g), '在<code>script</code>的开头添加<code>$&#40;document&#41;.ready<wbr>&#40;function&#40;&#41; {</code>。');"
        },
        {
          "text": "用<code>}&#41;;</code>闭合<code>$&#40;document&#41;.ready<wbr>&#40;function&#40;&#41; {</code>函数。",
          "testString": "assert(code.match(/\\n*?\\s*?\\}\\s*?\\);/g), '用<code>}&#41;;</code>闭合<code>$&#40;document&#41;.ready<wbr>&#40;function&#40;&#41; {</code>函数。');"
        }
      ],
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<!-- 请把你的代码写在这行以上 -->",
            "",
            "<div class=\"container-fluid\">",
            "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
            "  <div class=\"row\">",
            "    <div class=\"col-xs-6\">",
            "      <h4>#left-well</h4>",
            "      <div class=\"well\" id=\"left-well\">",
            "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
            "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
            "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
            "      </div>",
            "    </div>",
            "    <div class=\"col-xs-6\">",
            "      <h4>#right-well</h4>",
            "      <div class=\"well\" id=\"right-well\">",
            "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
            "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
            "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
            "      </div>",
            "    </div>",
            "  </div>",
            "</div>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "bad87fee1348bd9bedc08826",
      "title": "Target HTML Elements with Selectors Using jQuery",
      "required": [
        {
          "link": "https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.0/animate.css"
        }
      ],
      "description": [
        "接下来我们学习<code>document ready function</code>。",
        "首先，我们完成第一个 jQuery 语句。所有的 jQuery 函数以<code>$</code>开头，这个符号通常被称为<code>美元符号（dollar sign operator）</code>或<code>bling</code>。",
        "jQuery 通常选取并操作带有<code>选择器（selector）</code>的 HTML 标签。",
        "例如，如果要所有<code>button</code>有弹性的动画效果，只需在<code>document ready function</code>中添加如下代码即可：",
        "<code>$(\"button\").addClass(\"animated bounce\");</code>",
        "请注意，为了能在编辑器里直接使用，我们已经为你在后台引入了 jQuery 库和 Animate.css 库。因此，你只需要通过 jQuery 给<code>button</code>元素添加<code>bounce</code>类就可以了。"
      ],
      "tests": [
        {
          "text": "用 jQuery 的<code>addClass&#40&#41</code>方法给<code>button</code>标签添加<code>animated</code>和<code>bounce</code>类。",
          "testString": "assert($(\"button\").hasClass(\"animated\") && $(\"button\").hasClass(\"bounce\"), '用 jQuery 的<code>addClass&#40&#41</code>方法给<code>button</code>标签添加<code>animated</code>和<code>bounce</code>类。');"
        },
        {
          "text": "仅用 jQuery 给标签添加颜色。",
          "testString": "assert(!code.match(/class.*animated/g), '仅用 jQuery 给标签添加颜色。');"
        },
        {
          "text": "jQuery 代码应该放在<code>$(document).ready();</code>函数里。",
          "testString": "assert(code.match(/\\$\\(document\\)\\.ready\\(function.*(\\s|\\n)*.*button.*.addClass.*\\);/g), 'jQuery 代码应该放在<code>$(document).ready();</code>函数里。');"
        }
      ],
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  $(document).ready(function() {",
            "",
            "  });",
            "</script>",
            "",
            "<!-- 请修改本行以上的代码 -->",
            "",
            "<div class=\"container-fluid\">",
            "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
            "  <div class=\"row\">",
            "    <div class=\"col-xs-6\">",
            "      <h4>#left-well</h4>",
            "      <div class=\"well\" id=\"left-well\">",
            "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
            "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
            "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
            "      </div>",
            "    </div>",
            "    <div class=\"col-xs-6\">",
            "      <h4>#right-well</h4>",
            "      <div class=\"well\" id=\"right-well\">",
            "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
            "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
            "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
            "      </div>",
            "    </div>",
            "  </div>",
            "</div>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "bad87fee1348bd9aedc08826",
      "title": "Target Elements by Class Using jQuery",
      "required": [
        {
          "link": "https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.0/animate.css"
        }
      ],
      "description": [
        "我们如何使所有的<code>button</code>标签有弹性的动画效果？我们用<code>$(\"button\")</code>选取所有的<code>button</code>标签，并用<code>.addClass(\"animated bounce\");</code>给其添加一些 CSS 属性。",
        "jQuery 的<code>.addClass()</code>方法用来给标签添加类。",
        "首先，我们使用<code>$(\".well\")</code>选取类为<code>well</code>的<code>div</code>标签。",
        "值得注意的是，和 CSS 声明一样，在类名前需要添加<code>.</code>。",
        "然后，用 jQuery 的<code>.addClass()</code>方法添加<code>animated</code>和<code>shake</code>类。",
        "例如，在<code>document ready function</code>中添加下面的代码，能使所有类为<code>text-primary</code>的标签抖动：",
        "<code>$(\".text-primary\").addClass(\"animated shake\");</code>"
      ],
      "tests": [
        {
          "text": "用 jQuery 的<code>addClass&#40&#41</code>方法给所有类为<code>well</code>的标签添加<code>animated</code>和<code>shake</code>类。",
          "testString": "assert($(\".well\").hasClass(\"animated\") && $(\".well\").hasClass(\"shake\"), '用 jQuery 的<code>addClass&#40&#41</code>方法给所有类为<code>well</code>的标签添加<code>animated</code>和<code>shake</code>类。');"
        },
        {
          "text": "仅用 jQuery 给标签添加类。",
          "testString": "assert(!code.match(/class\\.\\*animated/g), '仅用 jQuery 给标签添加类。');"
        }
      ],
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  $(document).ready(function() {",
            "    $(\"button\").addClass(\"animated bounce\");",
            "  });",
            "</script>",
            "",
            "<!-- 请修改本行以上的代码 -->",
            "",
            "<div class=\"container-fluid\">",
            "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
            "  <div class=\"row\">",
            "    <div class=\"col-xs-6\">",
            "      <h4>#left-well</h4>",
            "      <div class=\"well\" id=\"left-well\">",
            "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
            "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
            "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
            "      </div>",
            "    </div>",
            "    <div class=\"col-xs-6\">",
            "      <h4>#right-well</h4>",
            "      <div class=\"well\" id=\"right-well\">",
            "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
            "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
            "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
            "      </div>",
            "    </div>",
            "  </div>",
            "</div>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "bad87fee1348bd9aeda08826",
      "title": "Target Elements by id Using jQuery",
      "required": [
        {
          "link": "https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.0/animate.css"
        }
      ],
      "description": [
        "你也能通过 id 属性选取标签。",
        "首先，用<code>$(\"#target3\")</code>选择器选取 id 为<code>target3</code>的<code>button</code>标签。",
        "注意，和 CSS 属性一样，在 id 名前需要添加<code>#</code>。",
        "然后，用 jQuery 的<code>.addClass()</code>方法添加<code>animated</code>和<code>fadeOut</code>类。",
        "下面的代码的效果是使 id 为<code>target6</code>的<code>button</code>标签淡出：",
        "<code>$(\"#target6\").addClass(\"animated fadeOut\")</code>."
      ],
      "tests": [
        {
          "text": "用 jQuery 的<code>addClass&#40&#41</code>方法给<code>id</code>为<code>target3</code>的<code>button</code>标签添加<code>animated</code>类。",
          "testString": "assert($(\"#target3\").hasClass(\"animated\"), '用 jQuery 的<code>addClass&#40&#41</code>方法给<code>id</code>为<code>target3</code>的<code>button</code>标签添加<code>animated</code>类。');"
        },
        {
          "text": "用 jQuery 的<code>addClass&#40&#41</code>方法给<code>id</code>为<code>target3</code>的标签的类添加<code>fadeOut</code>类。",
          "testString": "assert(($(\"#target3\").hasClass(\"fadeOut\") || $(\"#target3\").hasClass(\"fadeout\"))  && code.match(/\\$\\(\\s*.#target3.\\s*\\)/g), '用 jQuery 的<code>addClass&#40&#41</code>方法给<code>id</code>为<code>target3</code>的标签的类添加<code>fadeOut</code>类。');"
        },
        {
          "text": "仅用 jQuery 给标签设置类。",
          "testString": "assert(!code.match(/class.*animated/g), '仅用 jQuery 给标签设置类。');"
        }
      ],
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  $(document).ready(function() {",
            "    $(\"button\").addClass(\"animated bounce\");",
            "    $(\".well\").addClass(\"animated shake\");",
            "",
            "  });",
            "</script>",
            "",
            "<!-- 请修改本行以上的代码 -->",
            "",
            "<div class=\"container-fluid\">",
            "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
            "  <div class=\"row\">",
            "    <div class=\"col-xs-6\">",
            "      <h4>#left-well</h4>",
            "      <div class=\"well\" id=\"left-well\">",
            "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
            "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
            "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
            "      </div>",
            "    </div>",
            "    <div class=\"col-xs-6\">",
            "      <h4>#right-well</h4>",
            "      <div class=\"well\" id=\"right-well\">",
            "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
            "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
            "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
            "      </div>",
            "    </div>",
            "  </div>",
            "</div>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "bad87fee1348bd9aeda08726",
      "title": "Delete Your jQuery Functions",
      "required": [
        {
          "link": "https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.0/animate.css"
        }
      ],
      "description": [
        "这些动画开始看起来很酷，但是有时可能会让用户分心。",
        "请删除<code>document ready function</code>内的三个 jQuery 函数，但保留<code>document ready function</code>本身。"
      ],
      "tests": [
        {
          "text": "删除<code>document ready function</code>中的三个 jQuery 函数。",
          "testString": "assert(code.match(/\\{\\s*\\}\\);/g), '删除<code>document ready function</code>中的三个 jQuery 函数。');"
        },
        {
          "text": "保持<code>script</code>标签不变。",
          "testString": "assert(code.match(/<script>/g), '保持<code>script</code>标签不变。');"
        },
        {
          "text": "保持<code>$&#40document&#41.ready&#40function&#40&#41 {</code>在<code>script</code>标签的开头不变。",
          "testString": "assert(code.match(/\\$\\(document\\)\\.ready\\(function\\(\\)\\s?\\{/g), '保持<code>$&#40document&#41.ready&#40function&#40&#41 {</code>在<code>script</code>标签的开头不变。');"
        },
        {
          "text": "保持 \"document ready function\" 用<code>&#125;&#41;</code>闭合。",
          "testString": "assert(code.match(/.*\\s*\\}\\);/g), '保持 \"document ready function\" 用<code>&#125;&#41;</code>闭合。');"
        },
        {
          "text": "保持<code>script</code>标签闭合。",
          "testString": "assert(code.match(/<\\/script>/g) && code.match(/<script/g) && code.match(/<\\/script>/g).length === code.match(/<script/g).length, '保持<code>script</code>标签闭合。');"
        }
      ],
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  $(document).ready(function() {",
            "    $(\"button\").addClass(\"animated bounce\");",
            "    $(\".well\").addClass(\"animated shake\");",
            "    $(\"#target3\").addClass(\"animated fadeOut\");",
            "",
            "  });",
            "</script>",
            "",
            "<!-- 请修改本行以上的代码 -->",
            "",
            "<div class=\"container-fluid\">",
            "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
            "  <div class=\"row\">",
            "    <div class=\"col-xs-6\">",
            "      <h4>#left-well</h4>",
            "      <div class=\"well\" id=\"left-well\">",
            "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
            "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
            "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
            "      </div>",
            "    </div>",
            "    <div class=\"col-xs-6\">",
            "      <h4>#right-well</h4>",
            "      <div class=\"well\" id=\"right-well\">",
            "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
            "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
            "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
            "      </div>",
            "    </div>",
            "  </div>",
            "</div>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "bad87fee1348bd9aed908626",
      "title": "Target the Same Element with Multiple jQuery Selectors",
      "required": [
        {
          "link": "https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.0/animate.css"
        }
      ],
      "description": [
        "现在你知道三种选取标签的方法：用标签选择器，如<code>$(\"button\")</code>；用类选择器，<code>$(\".btn\")</code>以及用 id 选择器，<code>$(\"#target1\")</code>。",
        "虽然可以在单个<code>.addClass()</code>内添加多个类，但是我们可以用<em>三种不同的方式</em>给一种标签添加类。",
        "以三种不同的方式用<code>.addClass()</code>方法每次只给一种标签添加一个类：",
        "给所有的<code>button</code>标签添加<code>animated</code>类。",
        "给所有类为<code>.btn</code>的<code>button</code>标签添加<code>shake</code>类。",
        "给所有 id 为<code>#target1</code>的<code>button</code>标签添加<code>btn-primary</code>类。",
        "<strong>注意：</strong><br>虽然三个选择器最终给 id 为<code>#target1</code>的<code>button</code>标签添加<code>shake</code>、<code>animated</code>和<code>btn-primary</code>等三个类，但是你需要用且仅用三种不同的选择器给三种标签各添加一个类（译者注：所谓的“一种标签”是指他们有某种共同的特点，如包含同一个 class）。"
      ],
      "tests": [
        {
          "text": "用<code>$&#40\"button\"&#41</code>选择标签。",
          "testString": "assert(code.match(/\\$\\s*?\\(\\s*?(?:'|\")\\s*?button\\s*?(?:'|\")/gi), '用<code>$&#40\"button\"&#41</code>选择标签。');"
        },
        {
          "text": "用<code>$&#40\".btn\"&#41</code>选择标签。",
          "testString": "assert(code.match(/\\$\\s*?\\(\\s*?(?:'|\")\\s*?\\.btn\\s*?(?:'|\")/gi), '用<code>$&#40\".btn\"&#41</code>选择标签。');"
        },
        {
          "text": "用<code>$&#40\"#target1\"&#41</code>选择标签。",
          "testString": "assert(code.match(/\\$\\s*?\\(\\s*?(?:'|\")\\s*?#target1\\s*?(?:'|\")/gi), '用<code>$&#40\"#target1\"&#41</code>选择标签。');"
        },
        {
          "text": "三个选择器每个只添加一个类。",
          "testString": "assert(code.match(/addClass/g) && code.match(/addClass\\s*?\\(\\s*?('|\")\\s*?[\\w-]+\\s*?\\1\\s*?\\)/g).length > 2, '三个选择器每个只添加一个类。');"
        },
        {
          "text": "<code>#target1</code>标签应具有<code>animated</code>、<code>shake</code>和<code>btn-primary</code>三个类。",
          "testString": "assert($(\"#target1\").hasClass(\"animated\") && $(\"#target1\").hasClass(\"shake\") && $(\"#target1\").hasClass(\"btn-primary\"), '<code>#target1</code>标签应具有<code>animated</code>、<code>shake</code>和<code>btn-primary</code>三个类。');"
        },
        {
          "text": "仅用 jQuery 给标签添加类。",
          "testString": "assert(!code.match(/class.*animated/g), '仅用 jQuery 给标签添加类。');"
        }
      ],
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  $(document).ready(function() {",
            "",
            "  });",
            "</script>",
            "",
            "<!-- 请修改本行以上的代码 -->",
            "",
            "<div class=\"container-fluid\">",
            "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
            "  <div class=\"row\">",
            "    <div class=\"col-xs-6\">",
            "      <h4>#left-well</h4>",
            "      <div class=\"well\" id=\"left-well\">",
            "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
            "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
            "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
            "      </div>",
            "    </div>",
            "    <div class=\"col-xs-6\">",
            "      <h4>#right-well</h4>",
            "      <div class=\"well\" id=\"right-well\">",
            "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
            "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
            "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
            "      </div>",
            "    </div>",
            "  </div>",
            "</div>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "bad87fee1348bd9aed918626",
      "title": "Remove Classes from an Element with jQuery",
      "required": [
        {
          "link": "https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.0/animate.css"
        }
      ],
      "description": [
        "和用 jQuery 的<code>addClass()</code>方法给标签添加类一样，也可以利用 jQuery 的<code>removeClass()</code>方法移除他们。",
        "下面的代码效果是为特定的按钮执行上面的操作：",
        "<code>$(\"#target2\").removeClass(\"btn-default\");</code>",
        "请把所有<code>button</code>标签的<code>btn-default</code>类移除。"
      ],
      "tests": [
        {
          "text": "移除所有的<code>button</code>标签的<code>btn-default</code>属性。",
          "testString": "assert($(\".btn-default\").length === 0, '移除所有的<code>button</code>标签的<code>btn-default</code>属性。');"
        },
        {
          "text": "仅用 jQuery 从标签中移除类。",
          "testString": "assert(code.match(/btn btn-default/g), '仅用 jQuery 从标签中移除类。');"
        },
        {
          "text": "仅移除<code>btn-default</code>类。",
          "testString": "assert(code.match(/\\.[\\v\\s]*removeClass[\\s\\v]*\\([\\s\\v]*('|\")\\s*btn-default\\s*('|\")[\\s\\v]*\\)/gm), '仅移除<code>btn-default</code>类。');"
        }
      ],
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  $(document).ready(function() {",
            "    $(\"button\").addClass(\"animated bounce\");",
            "    $(\".well\").addClass(\"animated shake\");",
            "    $(\"#target3\").addClass(\"animated fadeOut\");",
            "",
            "  });",
            "</script>",
            "",
            "<!-- 请修改本行以上的代码 -->",
            "",
            "<div class=\"container-fluid\">",
            "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
            "  <div class=\"row\">",
            "    <div class=\"col-xs-6\">",
            "      <h4>#left-well</h4>",
            "      <div class=\"well\" id=\"left-well\">",
            "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
            "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
            "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
            "      </div>",
            "    </div>",
            "    <div class=\"col-xs-6\">",
            "      <h4>#right-well</h4>",
            "      <div class=\"well\" id=\"right-well\">",
            "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
            "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
            "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
            "      </div>",
            "    </div>",
            "  </div>",
            "</div>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "bad87fee1348bd9aed908826",
      "title": "Change the CSS of an Element Using jQuery",
      "required": [
        {
          "link": "https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.0/animate.css"
        }
      ],
      "description": [
        "我们也能用 jQuery 直接改变 HTML 标签的 CSS。",
        "jQuery 有一个<code>.css()</code>方法，其能改变标签的 CSS。",
        "下面的代码效果是把颜色变蓝：",
        "<code>$(\"#target1\").css(\"color\", \"blue\");</code>",
        "这与通常的 CSS 声明略有不同，因为这个 CSS 属性和它的值在英文引号里，并且它们用逗号而不是冒号间隔开。",
        "删除你的jQuery选择器，并留下空的<code>document ready function</code>。",
        "请选择<code>target1</code>并将其颜色变为红色（red）。"
      ],
      "tests": [
        {
          "text": "<code>target1</code>标签应该有红色文本。",
          "testString": "assert($(\"#target1\").css(\"color\") === 'rgb(255, 0, 0)', '<code>target1</code>标签应该有红色文本。');"
        },
        {
          "text": "仅用 jQuery 给标签添加类。",
          "testString": "assert(!code.match(/class.*animated/g), '仅用 jQuery 给标签添加类。');"
        }
      ],
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  $(document).ready(function() {",
            "    $(\"button\").addClass(\"animated bounce\");",
            "    $(\".well\").addClass(\"animated shake\");",
            "    $(\"#target3\").addClass(\"animated fadeOut\");",
            "    $(\"button\").removeClass(\"btn-default\");",
            "",
            "  });",
            "</script>",
            "",
            "<!-- 请修改本行以上的代码 -->",
            "",
            "<div class=\"container-fluid\">",
            "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
            "  <div class=\"row\">",
            "    <div class=\"col-xs-6\">",
            "      <h4>#left-well</h4>",
            "      <div class=\"well\" id=\"left-well\">",
            "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
            "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
            "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
            "      </div>",
            "    </div>",
            "    <div class=\"col-xs-6\">",
            "      <h4>#right-well</h4>",
            "      <div class=\"well\" id=\"right-well\">",
            "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
            "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
            "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
            "      </div>",
            "    </div>",
            "  </div>",
            "</div>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "bad87fee1348bd9aed808826",
      "title": "Disable an Element Using jQuery",
      "description": [
        "你还能用 jQuery 改变 HTML 标签的非 CSS 属性,例如:能禁用按钮。",
        "当你禁用按钮时，它将变成灰色并无法点击。",
        "jQuery 有一个<code>.prop()</code>方法，你可以用其调整标签的属性。",
        "下面的代码效果是禁用所有的按钮：",
        "<code>$(\"button\").prop(\"disabled\", true);</code>",
        "请仅禁用<code>target1</code>按钮。"
      ],
      "tests": [
        {
          "text": "禁用<code>target1</code>按钮。",
          "testString": "assert($(\"#target1\") && $(\"#target1\").prop(\"disabled\") && code.match(/[\"']disabled[\"'],( true|true)/g), '禁用<code>target1</code>按钮。');"
        },
        {
          "text": "不禁用其他的按钮。",
          "testString": "assert($(\"#target2\") && !$(\"#target2\").prop(\"disabled\"), '不禁用其他的按钮。');"
        },
        {
          "text": "仅用 jQuery 给标签添加类。",
          "testString": "assert(!code.match(/disabled[^<]*>/g), '仅用 jQuery 给标签添加类。');"
        }
      ],
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  $(document).ready(function() {",
            "    $(\"#target1\").css(\"color\", \"red\");",
            "",
            "  });",
            "</script>",
            "",
            "<!-- 请修改本行以上的代码 -->",
            "",
            "<div class=\"container-fluid\">",
            "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
            "  <div class=\"row\">",
            "    <div class=\"col-xs-6\">",
            "      <h4>#left-well</h4>",
            "      <div class=\"well\" id=\"left-well\">",
            "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
            "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
            "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
            "      </div>",
            "    </div>",
            "    <div class=\"col-xs-6\">",
            "      <h4>#right-well</h4>",
            "      <div class=\"well\" id=\"right-well\">",
            "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
            "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
            "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
            "      </div>",
            "    </div>",
            "  </div>",
            "</div>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "564944c91be2204b269d51e3",
      "title": "Change Text Inside an Element Using jQuery",
      "description": [
        "你能用 jQuery 改变起始标签和结束标签之间的文本，甚至改变 HTML 标签。",
        "jQuery 有一个<code>.html()</code>函数，你能用其在标签里添加 HTML 标签和文本，函数提供的内容将完全替换之前标签的内容。",
        "下面的代码效果是重写并强调标题文本：",
        "<code>$(\"h3\").html(\"&#60;em&#62;jQuery Playground&#60;/em&#62;\");</code>",
        "类似的，jQuery 有一个<code>.text()</code>函数，其改变文本而不增加标签。换而言之，该函数会忽略所有传递过来的 HTML 标签，并将其视为用来替换原文本的文本。",
        "请强调 id 为<code>target4</code>的按钮的文本。",
        "请查看此<a href=\"https://developer.mozilla.org/en/docs/Web/HTML/Element/em\" target=\"_blank\">链接</a>来了解更多<code>&#60;i&#62;</code>和<code>&#60;em&#62;</code>的区别和用法。",
        "注意，<code>&#60;i&#62;</code>标签虽然传统上用来强调文本，但此后常用作图标的标签；<code>&#60;em&#62;</code>标签作为强调标签现在已被广泛接受。两者都可以应对本次挑战。"
      ],
      "releasedOn": "November 18, 2015",
      "tests": [
        {
          "text": "通过添加 HTML 标签强调<code>target4</code>按钮中的文本。",
          "testString": "assert.isTrue((/<em>|<i>\\s*#target4\\s*<\\/em>|<\\/i>/gi).test($(\"#target4\").html()), '通过添加 HTML 标签强调<code>target4</code>按钮中的文本。');"
        },
        {
          "text": "确保文本不乱。",
          "testString": "assert($(\"#target4\") && $(\"#target4\").text().trim() === '#target4', '确保文本不乱。');"
        },
        {
          "text": "不改变其他任何文本内容。",
          "testString": "assert.isFalse((/<em>|<i>/gi).test($(\"h3\").html()), '不改变其他任何文本内容。');"
        },
        {
          "text": "确保使用<code>.html()</code>方法而不是<code>.text()</code>方法。",
          "testString": "assert(code.match(/\\.html\\(/g), '确保使用<code>.html()</code>方法而不是<code>.text()</code>方法。');"
        },
        {
          "text": "确保用 jQuery 选取<code>button id=\"target4\"</code>。",
          "testString": "assert(code.match(/\\$\\(\\s*?(\\\"|\\')#target4(\\\"|\\')\\s*?\\)\\.html\\(/), '确保用 jQuery 选取<code>button id=\"target4\"</code>。');"
        }
      ],
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  $(document).ready(function() {",
            "    $(\"#target1\").css(\"color\", \"red\");",
            "    ",
            "  });",
            "</script>",
            "",
            "<!-- 请修改本行以上的代码 -->",
            "",
            "<div class=\"container-fluid\">",
            "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
            "  <div class=\"row\">",
            "    <div class=\"col-xs-6\">",
            "      <h4>#left-well</h4>",
            "      <div class=\"well\" id=\"left-well\">",
            "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
            "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
            "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
            "      </div>",
            "    </div>",
            "    <div class=\"col-xs-6\">",
            "      <h4>#right-well</h4>",
            "      <div class=\"well\" id=\"right-well\">",
            "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
            "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
            "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
            "      </div>",
            "    </div>",
            "  </div>",
            "</div>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "bad87fee1348bd9aed708826",
      "title": "Remove an Element Using jQuery",
      "description": [
        "现在学习用 jQuery 从页面移除 HTML 标签。",
        "jQuery 有一个<code>.remove()</code>方法，能完全移除 HTML 标签。",
        "请用<code>.remove()</code>方法从页面移除<code>target4</code>标签。"
      ],
      "tests": [
        {
          "text": "用 jQuery 从页面中移除<code>target4</code>标签。",
          "testString": "assert($(\"#target4\").length === 0 && code.match(/\\$\\([\"']#target4[\"']\\).remove\\(\\)/g), '用 jQuery 从页面中移除<code>target4</code>标签。');"
        },
        {
          "text": "仅用 jQuery 移除该标签。",
          "testString": "assert(code.match(/id=\"target4/g) && !code.match(/<!--.*id=\"target4\".*-->/g) && $(\"#right-well\").length > 0, '仅用 jQuery 移除该标签。');"
        }
      ],
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  $(document).ready(function() {",
            "    $(\"#target1\").css(\"color\", \"red\");",
            "    $(\"#target1\").prop(\"disabled\", true);",
            "",
            "  });",
            "</script>",
            "",
            "<!-- 请修改本行以上的代码 -->",
            "",
            "<div class=\"container-fluid\">",
            "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
            "  <div class=\"row\">",
            "    <div class=\"col-xs-6\">",
            "      <h4>#left-well</h4>",
            "      <div class=\"well\" id=\"left-well\">",
            "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
            "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
            "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
            "      </div>",
            "    </div>",
            "    <div class=\"col-xs-6\">",
            "      <h4>#right-well</h4>",
            "      <div class=\"well\" id=\"right-well\">",
            "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
            "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
            "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
            "      </div>",
            "    </div>",
            "  </div>",
            "</div>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "bad87fee1348bd9aed608826",
      "title": "Use appendTo to Move Elements with jQuery",
      "description": [
        "现在我们学习把标签从一个<code>div</code>移动到另一个<code>div</code>。",
        "jQuery 有一个<code>appendTo()</code>方法，可以选取 HTML 标签并将其添加到另一个标签里面。",
        "例如，如果要把<code>target4</code>从右框移到左框，可以设置如下：",
        "<code>$(\"#target4\").appendTo(\"#left-well\");</code>",
        "请把<code>target2</code>标签从<code>left-well</code>移动到<code>right-well</code>。"
      ],
      "tests": [
        {
          "text": "<code>target2</code>标签应该不在<code>left-well</code>内。",
          "testString": "assert($(\"#left-well\").children(\"#target2\").length === 0, '<code>target2</code>标签应该不在<code>left-well</code>内。');"
        },
        {
          "text": "<code>target2</code>标签应该在<code>right-well</code>内。",
          "testString": "assert($(\"#right-well\").children(\"#target2\").length > 0, '<code>target2</code>标签应该在<code>right-well</code>内。');"
        },
        {
          "text": "仅用 jQuery 移动这些标签。",
          "testString": "assert(!code.match(/class.*animated/g), '仅用 jQuery 移动这些标签。');"
        }
      ],
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  $(document).ready(function() {",
            "    $(\"#target1\").css(\"color\", \"red\");",
            "    $(\"#target1\").prop(\"disabled\", true);",
            "    $(\"#target4\").remove();",
            "",
            "  });",
            "</script>",
            "",
            "<!-- 请修改本行以上的代码 -->",
            "",
            "<div class=\"container-fluid\">",
            "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
            "  <div class=\"row\">",
            "    <div class=\"col-xs-6\">",
            "      <h4>#left-well</h4>",
            "      <div class=\"well\" id=\"left-well\">",
            "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
            "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
            "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
            "      </div>",
            "    </div>",
            "    <div class=\"col-xs-6\">",
            "      <h4>#right-well</h4>",
            "      <div class=\"well\" id=\"right-well\">",
            "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
            "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
            "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
            "      </div>",
            "    </div>",
            "  </div>",
            "</div>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "bad87fee1348bd9aed508826",
      "title": "Clone an Element Using jQuery",
      "description": [
        "除了移动标签，也可以把元素从一个地方复制到另一地方。",
        "jQuery 有一个<code>clone()</code>方法，可以复制标签。",
        "例如，如果想把<code>target2</code>从<code>left-well</code>复制到<code>right-well</code>，可以设置如下：",
        "<code>$(\"#target2\").clone().appendTo(\"#right-well\");</code>",
        "你是否注意到这两个 jQuery 方法连在一起了吗？这被称为<code>链式调用（function chaining）</code>，是一种用 jQuery 实现效果的简便方法。",
        "克隆<code>target5</code>标签并附加到<code>left-well</code>。"
      ],
      "tests": [
        {
          "text": "<code>target5</code>标签应该在<code>right-well</code>内。",
          "testString": "assert($(\"#right-well\").children(\"#target5\").length > 0, '<code>target5</code>标签应该在<code>right-well</code>内。');"
        },
        {
          "text": "克隆<code>target5</code>标签并放在<code>left-well</code>内。",
          "testString": "assert($(\"#left-well\").children(\"#target5\").length > 0, '克隆<code>target5</code>标签并放在<code>left-well</code>内。');"
        },
        {
          "text": "仅用 jQuery 移动这些标签。",
          "testString": "assert(!code.match(/class.*animated/g), '仅用 jQuery 移动这些标签。');"
        }
      ],
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  $(document).ready(function() {",
            "    $(\"#target1\").css(\"color\", \"red\");",
            "    $(\"#target1\").prop(\"disabled\", true);",
            "    $(\"#target4\").remove();",
            "    $(\"#target2\").appendTo(\"#right-well\");",
            "",
            "  });",
            "</script>",
            "",
            "<!-- 请修改本行以上的代码 -->",
            "",
            "<div class=\"container-fluid\">",
            "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
            "  <div class=\"row\">",
            "    <div class=\"col-xs-6\">",
            "      <h4>#left-well</h4>",
            "      <div class=\"well\" id=\"left-well\">",
            "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
            "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
            "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
            "      </div>",
            "    </div>",
            "    <div class=\"col-xs-6\">",
            "      <h4>#right-well</h4>",
            "      <div class=\"well\" id=\"right-well\">",
            "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
            "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
            "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
            "      </div>",
            "    </div>",
            "  </div>",
            "</div>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "bad87fee1348bd9aed308826",
      "title": "Target the Parent of an Element Using jQuery",
      "description": [
        "每个 HTML 标签都默认<code>继承（inherits）</code>其<code>父标签（parent element）</code>的 CSS 属性。",
        "例如，<code>h3</code>标签<code>jQuery Playground</code>的父标签是<code>&#60;div class=\"container-fluid\"&#62</code>，<code>&#60;div class=\"container-fluid\"&#62</code>的父标签是<code>body</code>。",
        "jQuery 有一个<code>parent()</code>方法，可以访问被选取标签的父标签。",
        "下面的代码展示了使用<code>parent()</code>方法把<code>left-well</code>标签的父标签背景色设置成<code>蓝色（blue）</code>的方式：",
        "<code>$(\"#left-well\").parent().css(\"background-color\", \"blue\")</code>",
        "请把<code>#target1</code>标签的父标签背景色设置成<code>红色（red）</code>。"
      ],
      "tests": [
        {
          "text": "<code>left-well</code>标签应该有红色的背景。",
          "testString": "assert($(\"#left-well\").css(\"background-color\") === 'red' || $(\"#left-well\").css(\"background-color\") === 'rgb(255, 0, 0)' || $(\"#left-well\").css(\"background-color\").toLowerCase() === '#ff0000' || $(\"#left-well\").css(\"background-color\").toLowerCase() === '#f00', '<code>left-well</code>标签应该有红色的背景。');"
        },
        {
          "text": "应该用<code>&#46;parent&#40;&#41;</code>方法修改该标签。",
          "testString": "assert(code.match(/\\.parent\\s*\\(\\s*\\)\\s*\\.css/g), '应该用<code>&#46;parent&#40;&#41;</code>方法修改该标签。');"
        },
        {
          "text": "应该在<code>&#35;target1</code>标签上调用<code>&#46;parent&#40;&#41;</code>方法。",
          "testString": "assert(code.match(/\\$\\s*?\\(\\s*?(?:'|\")\\s*?#target1\\s*?(?:'|\")\\s*?\\)\\s*?\\.parent/gi), '应该在<code>&#35;target1</code>标签上调用<code>&#46;parent&#40;&#41;</code>方法。');"
        },
        {
          "text": "仅用 jQuery 给标签添加类。",
          "testString": "assert(code.match(/<div class=\"well\" id=\"left-well\">/g), '仅用 jQuery 给标签添加类。');"
        }
      ],
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  $(document).ready(function() {",
            "    $(\"#target1\").css(\"color\", \"red\");",
            "    $(\"#target1\").prop(\"disabled\", true);",
            "    $(\"#target4\").remove();",
            "    $(\"#target2\").appendTo(\"#right-well\");",
            "    $(\"#target5\").clone().appendTo(\"#left-well\");",
            "",
            "  });",
            "</script>",
            "",
            "<!-- 请修改本行以上的代码 -->",
            "",
            "<body>",
            "  <div class=\"container-fluid\">",
            "    <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
            "    <div class=\"row\">",
            "      <div class=\"col-xs-6\">",
            "        <h4>#left-well</h4>",
            "        <div class=\"well\" id=\"left-well\">",
            "          <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
            "          <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
            "          <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
            "        </div>",
            "      </div>",
            "      <div class=\"col-xs-6\">",
            "        <h4>#right-well</h4>",
            "        <div class=\"well\" id=\"right-well\">",
            "          <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
            "          <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
            "          <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
            "        </div>",
            "      </div>",
            "    </div>",
            "  </div>",
            "</body>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "bad87fee1348bd9aed208826",
      "title": "Target the Children of an Element Using jQuery",
      "description": [
        "把 HTML 标签放到另一个级别的标签里，这些 HTML 标签被称为该标签的<code>子标签（children element）</code>。例如，本次挑战中文本为 \"#target1\"、\"#target2\" 和 \"#target3\" 的按钮都是<code>&#60;div class=\"well\" id=\"left-well\"&#62;</code>标签的<code>子标签</code>。",
        "jQuery 有一个<code>children()</code>方法，可以访问被选取标签的子标签。",
        "下面的代码展示了用<code>children()</code>方法把<code>left-well</code>标签的子标签的颜色设置成<code>蓝色（blue）</code>：",
        "<code>$(\"#left-well\").children().css(\"color\", \"blue\")</code>",
        "<hr>",
        "请把<code>right-well</code>标签的所有子标签颜色设置成<code>橙色（orange）</code>。"
      ],
      "tests": [
        {
          "text": "<code>#right-well</code>所有的子标签文本应该是橙色。",
          "testString": "assert($(\"#right-well\").children().css(\"color\") === 'rgb(255, 165, 0)', '<code>#right-well</code>所有的子标签文本应该是橙色。');"
        },
        {
          "text": "应该用<code>children&#40&#41</code>方法修改标签。",
          "testString": "assert(code.match(/\\.children\\(\\)\\.css/g), '应该用<code>children&#40&#41</code>方法修改标签。');"
        },
        {
          "text": "仅用 jQuery 给标签添加类。",
          "testString": "assert(code.match(/<div class=\"well\" id=\"right-well\">/g), '仅用 jQuery 给标签添加类。');"
        }
      ],
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  $(document).ready(function() {",
            "    $(\"#target1\").css(\"color\", \"red\");",
            "    $(\"#target1\").prop(\"disabled\", true);",
            "    $(\"#target4\").remove();",
            "    $(\"#target2\").appendTo(\"#right-well\");",
            "    $(\"#target5\").clone().appendTo(\"#left-well\");",
            "    $(\"#target1\").parent().css(\"background-color\", \"red\");",
            "",
            "  });",
            "</script>",
            "",
            "<!-- 请修改本行以上的代码 -->",
            "",
            "<div class=\"container-fluid\">",
            "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
            "  <div class=\"row\">",
            "    <div class=\"col-xs-6\">",
            "      <h4>#left-well</h4>",
            "      <div class=\"well\" id=\"left-well\">",
            "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
            "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
            "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
            "      </div>",
            "    </div>",
            "    <div class=\"col-xs-6\">",
            "      <h4>#right-well</h4>",
            "      <div class=\"well\" id=\"right-well\">",
            "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
            "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
            "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
            "      </div>",
            "    </div>",
            "  </div>",
            "</div>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "bad87fee1348bd9aed108826",
      "title": "Target a Specific Child of an Element Using jQuery",
      "required": [
        {
          "link": "https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.0/animate.css"
        }
      ],
      "description": [
        "你已经看到了为什么 id 属性对于 jQuery 选择器选取标签非常方便，但这并不适用于所有情景。",
        "幸运的是，jQuery 有一些其他的方法可以选取正确的标签。",
        "jQuery 可以用<code>CSS 选择器（CSS Selectors）</code>选取标签。<code>target:nth-child(n)</code>CSS 选择器可以选取所有的第 n 个标签并设置目标属性和目标样式。",
        "下面的代码展示了给每个区域（well）的第 3 个标签设置<code>bounce</code>类：",
        "<code>$(\".target:nth-child(3)\").addClass(\"animated bounce\");</code>",
        "请给每个区域（well）的第 2 个标签设置<code>bounce</code>类，必须用<code>target</code>类选取标签。"
      ],
      "tests": [
        {
          "text": "<code>target</code>标签中的第二个标签应该有弹性的动画效果。",
          "testString": "assert($(\".target:nth-child(2)\").hasClass(\"animated\") && $(\".target:nth-child(2)\").hasClass(\"bounce\"), '<code>target</code>标签中的第二个标签应该有弹性的动画效果。');"
        },
        {
          "text": "应该仅两个标签有弹性的动画效果。",
          "testString": "assert($(\".animated.bounce\").length === 2, '应该仅两个标签有弹性的动画效果。');"
        },
        {
          "text": "应该用<code>&#58;nth-child&#40&#41</code>选择器修改这些标签。",
          "testString": "assert(code.match(/\\:nth-child\\(/g), '应该用<code>&#58;nth-child&#40&#41</code>选择器修改这些标签。');"
        },
        {
          "text": "仅用 jQuery 给标签添加类。",
          "testString": "assert(code.match(/\\$\\(\".target:nth-child\\(2\\)\"\\)/g) || code.match(/\\$\\('.target:nth-child\\(2\\)'\\)/g) || code.match(/\\$\\(\".target\"\\).filter\\(\":nth-child\\(2\\)\"\\)/g) || code.match(/\\$\\('.target'\\).filter\\(':nth-child\\(2\\)'\\)/g), '仅用 jQuery 给标签添加类。');"
        }
      ],
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  $(document).ready(function() {",
            "    $(\"#target1\").css(\"color\", \"red\");",
            "    $(\"#target1\").prop(\"disabled\", true);",
            "    $(\"#target4\").remove();",
            "    $(\"#target2\").appendTo(\"#right-well\");",
            "    $(\"#target5\").clone().appendTo(\"#left-well\");",
            "    $(\"#target1\").parent().css(\"background-color\", \"red\");",
            "    $(\"#right-well\").children().css(\"color\", \"orange\");",
            "",
            "  });",
            "</script>",
            "",
            "<!-- 请修改本行以上的代码 -->",
            "",
            "<div class=\"container-fluid\">",
            "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
            "  <div class=\"row\">",
            "    <div class=\"col-xs-6\">",
            "      <h4>#left-well</h4>",
            "      <div class=\"well\" id=\"left-well\">",
            "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
            "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
            "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
            "      </div>",
            "    </div>",
            "    <div class=\"col-xs-6\">",
            "      <h4>#right-well</h4>",
            "      <div class=\"well\" id=\"right-well\">",
            "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
            "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
            "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
            "      </div>",
            "    </div>",
            "  </div>",
            "</div>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "bad87fee1348bd9aed008826",
      "title": "Target Even Elements Using jQuery",
      "required": [
        {
          "link": "https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.0/animate.css"
        }
      ],
      "description": [
        "你也可以用基于位置的<code>:odd</code>和<code>:even</code>选择器选取标签。",
        "注意，jQuery 是<code>零索引（zero-indexed）</code>的，这意味着第 1 个标签的位置编号是<code>0</code>。这有点混乱和反常——<code>:odd</code>表示选择第 2 个标签（位置编号 1），第 4 个标签（位置编号 3）……等等，以此类推。",
        "下面的代码展示了选取所有的奇标签并设置类：",
        "<code>$(\".target:odd\").addClass(\"animated shake\");</code>",
        "请尝试选取所有<code>target</code>标签的偶标签并给他们设置<code>animated</code>和<code>shake</code>类。要考虑到<strong>偶（even）</strong>指的是标签位置编号基于<code>0</code>的系统。"
      ],
      "tests": [
        {
          "text": "所有的<code>target</code>标签应该抖动。",
          "testString": "assert($('.target:even').hasClass('animated') && $('.target:even').hasClass('shake'), '所有的<code>target</code>标签应该抖动。');"
        },
        {
          "text": "应该用<code>&#58;even</code>选择器修改这些标签。",
          "testString": "assert(code.match(/\\:even/g), '应该用<code>&#58;even</code>选择器修改这些标签。');"
        },
        {
          "text": "仅用 jQuery 给标签添加类。",
          "testString": "assert(code.match(/\\$\\(\".target:even\"\\)/g) || code.match(/\\$\\('.target:even'\\)/g) || code.match(/\\$\\(\".target\"\\).filter\\(\":even\"\\)/g) || code.match(/\\$\\('.target'\\).filter\\(':even'\\)/g), '仅用 jQuery 给标签添加类。');"
        }
      ],
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  $(document).ready(function() {",
            "    $(\"#target1\").css(\"color\", \"red\");",
            "    $(\"#target1\").prop(\"disabled\", true);",
            "    $(\"#target4\").remove();",
            "    $(\"#target2\").appendTo(\"#right-well\");",
            "    $(\"#target5\").clone().appendTo(\"#left-well\");",
            "    $(\"#target1\").parent().css(\"background-color\", \"red\");",
            "    $(\"#right-well\").children().css(\"color\", \"orange\");",
            "    $(\"#left-well\").children().css(\"color\", \"green\");",
            "    $(\".target:nth-child(2)\").addClass(\"animated bounce\");",
            "",
            "  });",
            "</script>",
            "",
            "<!-- 请修改本行以上的代码 -->",
            "",
            "<div class=\"container-fluid\">",
            "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
            "  <div class=\"row\">",
            "    <div class=\"col-xs-6\">",
            "      <h4>#left-well</h4>",
            "      <div class=\"well\" id=\"left-well\">",
            "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
            "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
            "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
            "      </div>",
            "    </div>",
            "    <div class=\"col-xs-6\">",
            "      <h4>#right-well</h4>",
            "      <div class=\"well\" id=\"right-well\">",
            "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
            "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
            "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
            "      </div>",
            "    </div>",
            "  </div>",
            "</div>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "bad87fee1348bd9aecb08826",
      "title": "Use jQuery to Modify the Entire Page",
      "required": [
        {
          "link": "https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.0/animate.css"
        }
      ],
      "description": [
        "jQuery 的学习到这里就告一段落了，现在我们来试一试让元素消失的特效。",
        "jQuery 也能选取<code>body</code>标签。",
        "后面的代码效果是使整个<code>body</code>标签淡出：<code> $(\"body\").addClass(\"animated fadeOut\");</code>",
        "接下来我们做一些更有戏剧性的事：给<code>body</code>标签添加<code>animated</code>和<code>hinge</code>类。"
      ],
      "tests": [
        {
          "text": "给<code>body</code>标签添加<code>animated</code>和<code>hinge</code>类。",
          "testString": "assert($('body').hasClass('animated') && $('body').hasClass('hinge'), '给<code>body</code>标签添加<code>animated</code>和<code>hinge</code>类。');"
        }
      ],
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  $(document).ready(function() {",
            "    $(\"#target1\").css(\"color\", \"red\");",
            "    $(\"#target1\").prop(\"disabled\", true);",
            "    $(\"#target4\").remove();",
            "    $(\"#target2\").appendTo(\"#right-well\");",
            "    $(\"#target5\").clone().appendTo(\"#left-well\");",
            "    $(\"#target1\").parent().css(\"background-color\", \"red\");",
            "    $(\"#right-well\").children().css(\"color\", \"orange\");",
            "    $(\"#left-well\").children().css(\"color\", \"green\");",
            "    $(\".target:nth-child(2)\").addClass(\"animated bounce\");",
            "    $(\".target:even\").addClass(\"animated shake\");",
            "",
            "  });",
            "</script>",
            "",
            "<!-- 请修改本行以上的代码 -->",
            "",
            "<div class=\"container-fluid\">",
            "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
            "  <div class=\"row\">",
            "    <div class=\"col-xs-6\">",
            "      <h4>#left-well</h4>",
            "      <div class=\"well\" id=\"left-well\">",
            "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
            "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
            "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
            "      </div>",
            "    </div>",
            "    <div class=\"col-xs-6\">",
            "      <h4>#right-well</h4>",
            "      <div class=\"well\" id=\"right-well\">",
            "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
            "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
            "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
            "      </div>",
            "    </div>",
            "  </div>",
            "</div>"
          ],
          "head": [],
          "tail": []
        }
      }
    }
  ]
}
